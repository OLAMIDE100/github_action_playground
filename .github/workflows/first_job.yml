name: 'first_job'

on:
  push:
    branches:
     - "main"
    paths:
     - 'api_1/**'
     - 'api_2/**'
     - 'tag.sh'
    
  
  

jobs:
  Cloud_Resources_Deployment:
    name: 'Cloud_Resources_Deployment'
    runs-on: ubuntu-latest
    environment: production


    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Detect_Chnages
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          api_1_function_1:
            - 'api_1/function_1/**'
          api_1_function_2:
            - 'api_1/function_2/**'
          api_2_function_1:
            - 'api_2/function_1/**'
          api_2_function_2:
            - 'api_2/function_2/**'
            tag:
              - 'tag.sh'

    - name: Setup_Terraform
      uses: hashicorp/setup-terraform@v1

    - name: api_1_function_1
      if: steps.changes.outputs.api_1_function_1 == 'true' 
      run: |
           echo $CREDENTIALS > gcloud-api-key.json
           export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-api-key.json
           echo 'yes' | terraform -chdir=api_1/function_1/terraform init 
           terraform -chdir=api_1/function_1/terraform  plan
           terraform -chdir=api_1/function_1/terraform  apply -auto-approve -input=false
      env:
         CREDENTIALS : ${{ secrets.TF_API_TOKEN }}


    - name: api_1_function_2
      if: steps.changes.outputs.api_1_function_2 == 'true' 
      run: |
           echo $CREDENTIALS > gcloud-api-key.json
           export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-api-key.json
           echo 'yes' | terraform -chdir=api_1/function_2/terraform init 
           terraform -chdir=api_1/function_2/terraform  plan
           terraform -chdir=api_1/function_2/terraform  apply -auto-approve -input=false
      env:
         CREDENTIALS : ${{ secrets.TF_API_TOKEN }}


    - name: api_2_function_1
      if: steps.changes.outputs.api_2_function_1 == 'true' 
      run: |
           echo $CREDENTIALS > gcloud-api-key.json
           export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-api-key.json
           echo 'yes' | terraform -chdir=api_2/function_1/terraform init 
           terraform -chdir=api_2/function_1/terraform  plan
           terraform -chdir=api_2/function_1/terraform  apply -auto-approve -input=false
      env:
         CREDENTIALS : ${{ secrets.TF_API_TOKEN }}

    - name: api_2_function_2
      if: steps.changes.outputs.api_2_function_2 == 'true' 
      run: |
           echo $CREDENTIALS > gcloud-api-key.json
           export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-api-key.json
           echo 'yes' | terraform -chdir=api_2/function_2/terraform init 
           terraform -chdir=api_2/function_2/terraform  plan
           terraform -chdir=api_2/function_2/terraform  apply -auto-approve -input=false
      env:
         CREDENTIALS : ${{ secrets.TF_API_TOKEN }}


    - name: api_2_function_2
      if: steps.changes.outputs.tag == 'true' 
      run: |
          bash tag.sh
  
         

    
  

