name: 'first_job'

on:
  push:
    branches:
     - "main"
    paths:
     - 'eodhd_api/**'
    
  
  

jobs:
  Cloud_Resources_Deployment:
    name: 'Cloud_Resources_Deployment'
    runs-on: ubuntu-latest
    environment: production


    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Detect_Chnages
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          src:
            - 'eodhd_api/eodhd_bulk_prices/cloudfunction/**'
          infra:
            - 'eodhd_api/eodhd_bulk_prices/terraform/**'

    - name: Setup_Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      if: steps.changes.outputs.infra == 'true' 
      run: |
           echo $CREDENTIALS > gcloud-api-key.json
           export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-api-key.json
           echo 'yes' | terraform -chdir=eodhd_api/eodhd_bulk_prices/terraform init 
           terraform -chdir=eodhd_api/eodhd_bulk_prices/terraform  plan
           terraform -chdir=eodhd_api/eodhd_bulk_prices/terraform  apply -auto-approve -input=false
      env:
         CREDENTIALS : ${{ secrets.TF_API_TOKEN }}
         
    - name: Terraform destroy
      if: steps.changes.outputs.src == 'true'
      run: |
            echo $CREDENTIALS > gcloud-api-key.json
            export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-api-key.json
            echo 'yes' | terraform -chdir=eodhd_api/eodhd_bulk_prices/terraform init -lock=false
            terraform -chdir=eodhd_api/eodhd_bulk_prices/terraform destroy -auto-approve -lock=false
      env:
          CREDENTIALS : ${{ secrets.TF_API_TOKEN }}


    - name: cloudfunction deploy
      if: steps.changes.outputs.src == 'true'
      run: echo "changes in cloud function path"
      
    
  

